#simulation
#for high speed, min value ~20, max value is ~1300, then jumps to 8190
#for high accuracy, max value is ~?
import matplotlib.pyplot as pyplot
import random
import statistics as stat

umax = 10
umin = 0
K = 7

q = .01
r = 6
p = 50

def calcMean(data):
	alldata = parseData(data)
	xdata = alldata["x"]
	ydata = alldata["y"]
	meanx = stat.mean(xdata)
	meany = stat.mean(ydata)
	varx = stat.variance(xdata)
	vary = stat.variance(ydata)
	ret = [meanx, meany, varx, vary]
	return ret


def parseData(data):
	xdata = []
	ydata = []
	for x in range(0,len(data)):
		if x % 2 == 0:
			xdata.append(data[x])
		else:
			ydata.append(data[x])
	alldata = {"x":xdata, "y":ydata}
	return alldata

def rawToUnit(data, t):
	#float m = .0078125
	#float b = -.15625
	newData = []
	if t == 'x':
		for raw in data:
			m = .0941
			b = -3.4884
			y = m*raw + b
			newData.append(y)
	else:
		for raw in data:
			m = -.0949
			b = 27.95
			y = m*raw + b
			newData.append(y)
	return newData

def dxnToBu(dxn):
	if dxn == 'X': return [0,0,0]
	elif dxn == 'F': return 10
	elif dxn == 'B': return -10
	elif dxn == 'L': return -10
	elif dxn == 'R': return 10

def getFilteredValue(measurement, x, q, r, p, dxn):
      #Updates and gets the current measurement value */
      #prediction update
      #predicted error covariance = previous + process noise

      p = p + q;

      #measurement update
	  #gain = ratio between how large sensor noise is compared to previous estimated error
      k = p / (p + r);

      #current filtered value = previous filtered value + gain*(unfiltered - filtered value)
      x = x + dxnToBu(dxn) + k * (measurement - x);

      #current error = (1 - gain)*previous error
      p = (1 - k) * p;
      return x;

def main3():



def main2():
	resx = []
	residx = []
	resy = []
	sep = parseData(squarepath)
	sepx = sep['x']
	sepy = sep['y']
	prevx = 16
	prevy = 14
	for nx in sepx:
		x = getFilteredValue(nx, prevx, q, r, p, 'R')
		#y = getFilteredValue(ny, prevy, q, r, p, 'U')
		resx.append(int(x))
		residx.append(int(x) - nx)
		#resy.append(y)
		prevx = x
		#prevy = y
	print("resx is ")
	print(resx)
	print("resid is ")
	print(residx)

def main():
	alldata = parseData(squarepath)
	xxdata = alldata["x"]
	yydata = alldata["y"]
	xdata = rawToUnit(xxdata, 'x')
	ydata = rawToUnit(yydata, 'y')
	#noise = 0
	#for a in range(0, len(xdata)):
	#	xdata[a] = xdata[a] + random.randint(-1*noise, noise)
	#	ydata[a] = ydata[a] + random.randint(-1*noise, noise)
	color = []
	xfilter = []
	xprev = xdata[0]
	yfilter = []
	yprev = ydata[0]
	xfilter2 = []
	xprev2 = xdata[0]
	yfilter2 = []
	yprev2 = ydata[0]
	for i in range(0, len(xdata)): color.append(i)
	for j in range(0, len(xdata)):
		xnext = ((K - 1)/K)*xprev + (1/K)*xdata[j]
		ynext = ((K - 1)/K)*yprev + (1/K)*ydata[j]
		xfilter.append(xnext)
		yfilter.append(ynext)
		xprev = xnext
		yprev = ynext
	for k in range(0, len(xdata)):
		xnext = getFilteredValue(xdata[k], xprev2, q, r, p)
		ynext = getFilteredValue(ydata[k], yprev2, q, r, p)
		xfilter2.append(xnext)
		yfilter2.append(ynext)
		xprev2 = xnext
		yprev2 = ynext
	#pyplot.scatter(xdata, ydata, c=color, s=16)
	pyplot.scatter(xdata, ydata, s=8)
	#pyplot.set_cmap('hot')
	pyplot.plot(xdata, ydata, 'b-')
	#pyplot.plot(xfilter, yfilter, 'r--')
	pyplot.plot(xfilter2, yfilter2, 'g-.')
	pyplot.axis([0, 25, 0, 25])
	ret1 = calcMean(five15)
	ret2 = calcMean(five20)
	ret3 = calcMean(five25)
	ret4 = calcMean(ten25)
	ret5 = calcMean(twenty25)
	print(ret1)
	print(ret2)
	print(ret3)
	print(ret4)
	print(ret5)
	pyplot.show()


five15 = [95,137, 
90,135, 
87,141, 
91,136, 
94,133, 
94,137, 
91,134, 
90,135, 
90,137, 
85,137, 
94,137, 
91,135, 
91,135, 
90,139, 
92,136, 
88,135, 
88,134, 
93,140, 
96,135, 
93,134, 
89,138, 
93,136, 
91,138, 
90,135, 
90,136, 
93,137, 
94,138, 
86,132, 
91,136, 
93,140, 
94,139, 
92,137, 
94,131, 
90,137, 
91,139, 
90,137, 
94,136, 
90,136, 
90,140, 
88,135, 
91,135, 
91,138, 
89,136, 
88,135, 
91,139, 
91,135, 
89,136, 
89,138, 
89,131, 
89,134]

five20 = [
91,86, 
92,81, 
88,82, 
90,78, 
84,87, 
91,87, 
90,81, 
94,86, 
88,85, 
86,83, 
94,85, 
95,85, 
87,78, 
90,86, 
91,84, 
89,80, 
91,83, 
88,83, 
91,84, 
88,82, 
87,87, 
91,83, 
89,87, 
88,85, 
93,83, 
96,83, 
87,88, 
89,85, 
92,83, 
91,84, 
91,81, 
88,87, 
91,86, 
88,81, 
93,85, 
95,85, 
93,88, 
87,84, 
90,84, 
88,85, 
90,81, 
92,83, 
90,83, 
93,87, 
88,85, 
87,89, 
94,85, 
91,89, 
96,83, 
91,83, 
90,85, 
96,86, 
87,86, 
87,85, 
91,85, 
93,81, 
91,85, 
88,86, 
87,88, 
91,84, 
89,86, 
93,86, 
92,84, 
87,84, 
86,86, 
90,84, 
93,83, 
92,81, 
90,84, 
92,90, 
90,88, 
92,83]

five25 = [
87,32, 
93,32, 
92,30, 
90,28, 
95,29, 
92,34, 
89,33, 
94,32, 
87,32, 
92,34, 
94,35, 
86,33, 
90,33, 
90,34, 
90,30, 
89,28, 
87,35, 
89,35, 
89,33, 
86,29, 
91,31, 
90,30, 
88,32, 
94,29, 
92,28, 
90,33, 
94,32, 
93,29, 
91,34, 
90,25, 
87,33, 
94,32, 
93,31, 
92,30, 
92,32, 
91,31, 
91,36, 
88,33, 
86,28, 
93,32, 
94,28, 
90,33, 
88,32, 
93,35, 
91,31]

ten25 = [
144,29, 
148,33, 
140,28, 
142,36, 
142,31, 
140,33, 
141,28, 
144,33, 
146,30, 
139,30, 
146,32, 
145,34, 
143,34, 
145,31, 
145,34, 
142,25, 
143,34, 
144,28, 
144,27, 
142,27, 
142,34, 
144,31, 
142,31, 
147,33, 
141,32, 
142,29, 
147,31, 
145,34, 
144,37, 
142,31, 
146,33, 
141,32, 
142,27, 
140,33, 
144,31, 
144,29, 
139,30, 
142,29, 
140,30, 
145,30, 
141,31, 
145,33, 
139,33, 
141,29, 
144,27, 
137,32, 
143,31, 
140,35, 
144,30, 
144,36, 
143,33, 
145,28, 
145,31, 
145,26, 
140,32, 
142,29, 
139,32, 
140,30, 
144,30, 
144,31, 
144,30, 
144,24, 
144,25, 
142,34, 
142,33, 
145,25, 
141,28, 
143,25, 
143,30, 
147,30, 
144,31, 
140,28, 
141,29, 
139,25, 
142,29, 
147,33, 
142,32, 
143,33, 
149,27, 
143,28, 
142,30, 
144,30, 
140,30, 
147,26, 
143,30, 
144,29, 
147,26, 
143,32, 
140,28, 
144,30, 
144,28, 
140,32, 
136,29, 
142,28, 
138,33, 
141,27, 
146,37, 
140,32, 
139,29, 
144,32, 
140,31, 
140,32, 
146,28, 
142,28, 
139,31, 
146,28, 
144,29]

twenty25 = [
199,31, 
194,30, 
196,35, 
198,31, 
197,30, 
197,33, 
195,30, 
198,28, 
194,33, 
193,36, 
197,29, 
199,35, 
194,29, 
196,29, 
193,33, 
200,29, 
193,32, 
197,33, 
194,31, 
198,28, 
196,33, 
198,31, 
198,36, 
198,33, 
195,27, 
198,32, 
199,26, 
197,35, 
195,35, 
196,33, 
196,30, 
195,33, 
198,30, 
200,29, 
199,30, 
197,32, 
205,29, 
192,27, 
201,30, 
188,30, 
196,27, 
196,29, 
198,33, 
197,31, 
198,31, 
197,31, 
202,30, 
202,33, 
199,29, 
199,29, 
198,29, 
198,29, 
194,25, 
196,35, 
196,33, 
192,27, 
195,30, 
199,25, 
201,33, 
193,27, 
200,34, 
197,31, 
192,27, 
199,35, 
193,32, 
198,33, 
199,32, 
201,33, 
198,31]

fifeen2045degrees = [208,140, 
204,127, 
207,132, 
206,131, 
209,131, 
203,129, 
207,135, 
207,129, 
205,136, 
203,131, 
205,133, 
208,137, 
203,132, 
208,137, 
204,135, 
209,135, 
207,132, 
209,130, 
206,130, 
207,130, 
203,129, 
204,134, 
211,131, 
208,134, 
205,131, 
205,131, 
206,134, 
206,128, 
203,134, 
204,133, 
205,134, 
207,135, 
204,132, 
206,136, 
207,129, 
206,129, 
204,131, 
203,135, 
204,128, 
208,134, 
199,133, 
205,137, 
207,127, 
205,134, 
207,133, 
205,135, 
207,134, 
201,135, 
205,138, 
204,134, 
207,129, 
204,132, 
207,136, 
204,140, 
205,132, 
210,129, 
209,135, 
205,129, 
208,132, 
210,135, 
205,132, 
206,132, 
206,131, 
203,130, 
203,137, 
202,129, 
208,134, 
202,128, 
202,131, 
204,134, 
206,134, 
203,134, 
208,135, 
207,130, 
203,134, 
213,129, 
212,133, 
209,137, 
205,133, 
208,131, 
204,133, 
206,134, 
201,129, 
203,133, 
203,134, 
209,135, 
207,131, 
206,131, 
208,133, 
206,132, 
203,133, 
208,130, 
207,128, 
206,128, 
206,131, 
204,134, 
204,131, 
205,133, 
204,130, 
202,131, 
207,133, 
206,134, 
203,134, 
206,133, 
200,135, 
208,133, 
202,136, 
200,129, 
204,131, 
206,134, 
212,134, 
204,127, 
204,134, 
210,128, 
206,129, 
203,131, 
210,132, 
204,136, 
209,137, 
208,128]

tenTwenty45degrees = [134,178, 
137,176, 
137,168, 
137,167, 
133,174, 
134,172, 
134,168, 
138,174, 
143,172, 
137,174, 
134,171, 
139,172, 
136,175, 
136,171, 
138,171, 
135,174, 
136,166, 
137,167, 
136,173, 
134,171, 
140,168, 
135,174, 
136,173, 
136,171, 
138,170, 
137,175, 
137,171, 
138,172, 
139,169, 
139,171, 
138,171, 
135,172, 
139,172, 
135,172, 
134,169, 
141,172, 
137,172, 
137,171, 
141,177, 
140,174, 
130,175, 
139,170, 
140,171, 
136,166, 
137,170, 
140,175, 
135,172, 
137,166, 
137,166, 
135,173, 
138,170, 
138,169, 
136,169, 
133,169, 
136,170, 
132,172, 
137,169, 
135,169, 
138,171, 
138,173, 
133,167, 
136,172, 
141,173, 
139,173, 
139,168, 
137,174, 
136,172, 
141,173, 
137,172, 
136,171, 
138,174, 
135,172, 
137,175, 
135,176, 
136,172, 
135,171, 
136,168, 
142,172, 
138,171, 
137,172, 
137,173, 
135,171, 
129,171, 
137,168, 
135,170, 
138,167, 
133,172, 
142,175, 
135,166, 
139,168, 
135,171, 
136,176, 
134,172, 
142,172, 
138,171, 
140,172, 
138,173, 
135,171, 
137,166, 
137,171, 
136,174, 
138,167, 
139,176, 
137,173, 
133,170, 
137,171, 
136,169, 
139,172, 
133,171]

tenfifteen45degree = [137,203, 
133,198, 
141,200, 
142,201, 
138,202, 
135,203, 
138,200, 
142,202, 
141,201, 
136,208, 
138,201, 
138,195, 
139,203, 
140,209, 
138,199, 
140,204, 
143,199, 
143,203, 
141,202, 
140,203, 
144,198, 
143,201, 
143,203, 
142,204, 
137,198, 
137,197, 
138,202, 
139,207, 
138,205, 
136,198, 
137,201, 
142,197, 
139,204, 
137,203, 
138,208, 
138,202, 
139,202, 
144,203, 
139,205, 
140,203, 
137,198, 
137,199, 
140,208, 
136,204, 
137,206, 
137,202, 
136,198, 
139,205, 
139,201, 
144,200, 
134,200, 
138,202, 
142,199, 
134,199, 
143,205, 
143,208, 
138,205, 
143,204, 
138,206, 
137,207, 
142,202, 
137,203, 
140,199, 
137,201, 
139,199, 
139,204, 
138,202, 
142,204, 
138,205, 
139,203, 
139,201, 
139,204, 
138,203, 
140,199, 
139,203, 
135,201, 
141,205, 
138,201, 
142,203, 
137,198, 
133,202, 
137,201, 
138,198, 
142,198, 
138,203, 
141,198, 
141,201, 
139,200, 
142,208, 
135,204, 
140,199, 
139,201, 
144,203, 
140,203, 
139,208, 
138,204, 
138,202, 
138,203, 
142,201, 
142,205, 
134,204, 
138,203, 
141,199, 
141,202, 
140,205, 
139,204, 
138,206, 
144,203, 
138,203, 
141,205, 
138,203, 
135,203, 
136,204, 
144,204, 
139,201, 
139,203, 
137,201, 
135,203, 
141,207, 
141,203, 
142,201, 
142,203, 
137,203, 
140,204, 
136,201, 
143,200, 
135,200, 
140,202, 
137,198, 
141,207, 
142,199, 
138,202, 
139,204, 
140,203, 
138,206, 
135,198, 
137,197, 
143,203, 
138,204, 
142,203, 
140,203, 
135,203, 
139,204, 
143,204, 
138,206, 
140,204, 
140,200, 
142,207, 
142,206, 
140,201, 
138,199, 
139,204, 
137,201, 
139,199, 
139,200, 
141,205, 
136,201, 
141,205, 
145,202, 
137,202, 
136,205, 
138,203, 
137,202, 
139,207, 
141,206, 
141,200, 
138,205, 
140,203, 
141,202]

realPath = [127,202, 
126,198, 
132,205, 
138,201, 
144,197, 
138,197, 
148,198, 
152,189, 
157,185, 
164,191, 
166,189, 
164,186, 
168,186, 
174,189, 
179,180, 
182,175, 
183,172, 
187,166, 
187,167, 
190,161, 
192,150, 
189,149, 
194,138, 
190,131, 
192,124, 
199,117, 
197,119, 
203,104, 
202,93, 
200,91, 
199,79, 
207,71, 
203,66, 
206,61, 
206,58]

path1010 = [147,178, 
143,175, 
141,168, 
147,159, 
144,156, 
141,152, 
148,146, 
141,140, 
146,137, 
147,128, 
141,125, 
141,121, 
146,112, 
144,107, 
148,100, 
150,97, 
149,89, 
152,85, 
155,81, 
147,75, 
146,69, 
152,62, 
152,56, 
146,52, 
151,51, 
151,43, 
148,30, 
153,31, 
151,29, 
148,29, 
144,26, 
143,24, 
143,21, 
143,25, 
141,22]

squarepath = [207,147, 
206,133, 
199,134, 
200,137, 
202,132, 
202,127, 
203,126, 
204,126, 
203,125, 
202,118, 
200,126, 
205,115, 
205,117, 
204,113, 
200,114, 
200,111, 
204,105, 
203,101, 
202,98, 
207,95, 
206,90, 
202,92, 
204,90, 
203,89, 
199,93, 
202,91, 
199,85, 
197,79, 
198,79, 
201,78, 
194,82, 
197,77, 
197,73, 
199,73, 
199,72, 
191,69, 
198,67, 
193,66, 
198,67, 
197,61, 
190,62, 
188,63, 
184,59, 
181,62, 
177,57, 
182,60, 
174,58, 
173,60, 
166,64, 
167,63, 
157,67, 
157,58, 
155,61, 
150,55, 
149,62, 
142,62, 
147,62, 
142,57, 
138,59, 
142,61, 
138,59, 
133,56, 
132,60, 
134,58, 
129,60, 
125,58, 
117,56, 
120,62, 
115,55, 
121,56, 
113,60, 
115,60, 
115,57, 
116,57, 
109,60, 
107,60, 
108,62, 
103,64, 
99,58, 
106,63, 
100,63, 
93,66, 
90,63, 
96,69, 
94,67, 
91,67, 
90,72, 
89,69, 
87,73, 
95,78, 
90,77, 
90,78, 
93,83, 
89,80, 
89,85, 
94,89, 
92,90, 
93,92, 
95,91, 
91,100, 
90,103, 
95,103, 
96,101, 
97,106, 
91,107, 
98,115, 
91,112, 
98,114, 
95,118, 
96,116, 
102,117, 
91,116, 
93,119, 
99,118, 
99,122, 
99,130, 
100,127, 
98,127, 
97,126, 
102,129, 
100,130, 
105,135, 
103,133, 
103,135, 
102,137, 
103,139, 
102,134, 
104,144, 
102,144, 
107,143, 
110,145, 
109,146, 
108,148, 
110,149, 
110,150, 
108,147, 
102,150, 
112,154, 
113,160, 
113,154, 
112,159, 
111,159, 
116,160, 
112,161, 
109,163, 
112,163, 
117,166, 
112,161, 
114,162, 
112,165, 
117,163, 
115,165, 
117,167, 
121,163, 
119,162, 
122,161, 
128,162, 
129,166, 
128,168, 
134,164, 
137,164, 
139,164, 
141,166, 
139,166, 
146,163, 
142,166, 
144,166, 
143,167, 
146,166, 
151,164, 
149,162, 
156,165, 
154,165, 
156,166, 
155,165, 
161,166, 
155,164, 
158,164, 
154,164, 
163,165, 
163,161, 
165,159, 
164,159, 
171,161, 
173,161, 
176,164, 
175,167, 
177,162, 
177,164, 
178,156, 
177,157, 
179,164, 
176,161, 
178,163, 
180,164, 
183,159, 
183,159, 
187,162, 
194,158, 
194,159, 
193,167, 
191,163, 
194,166]

main2()